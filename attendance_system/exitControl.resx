<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>